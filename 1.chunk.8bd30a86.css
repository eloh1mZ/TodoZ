.field.svelte-4oxzxn.svelte-4oxzxn{position:relative}.field__input.svelte-4oxzxn.svelte-4oxzxn{all:initial;box-sizing:border-box;font:inherit;background-color:#fff;padding:1em 1.5em;width:calc(100vw - 2em);max-width:600px}.field__btn.svelte-4oxzxn.svelte-4oxzxn{position:absolute;right:0;top:0;height:100%;min-width:4em;background-color:var(--primary);border:none;outline:none;color:#fff;font-weight:1000}@media(max-width:600px){.field__input.svelte-4oxzxn:focus+.field__btn.svelte-4oxzxn{display:none}}.greeting.svelte-np6swo{display:flex;flex-direction:column;align-items:center}.task.svelte-1xs759q{--red:red;--green:#32cd32;position:relative;max-width:600px;margin:0 auto;font-size:1.2em;transform:translateX(var(--x));touch-action:none;transition:all var(--transition);background-color:#fff}.task--checked.svelte-1xs759q{opacity:.5;text-decoration:line-through}.task__title.svelte-1xs759q{display:block;width:100%;padding:1em 2em}.task__btn.svelte-1xs759q{position:absolute;top:0;font:inherit;width:var(--optimal-delta);height:100%;transition:transform var(--transition);outline:none;border:0}.task__btn--remove.svelte-1xs759q{left:100%;transform-origin:left center;background-color:var(--red);color:#fff}.checkbox.svelte-1xs759q{--size:1.5rem;position:absolute;top:calc(50% - var(--size)/2);right:1rem}.tasks__list.svelte-15k2s7n{padding:0;list-style:none;overflow:hidden;display:grid;margin:2em 0 0;grid-gap:.5em}.tasks__item.svelte-15k2s7n{width:100%;display:block}.tasks__item--checked.svelte-15k2s7n{order:100}
/*# sourceMappingURL=data:application/json;base64, */